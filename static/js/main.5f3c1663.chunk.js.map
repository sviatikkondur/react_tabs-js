{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","Id","tabs","selectedTabId","onTabSelected","selectedTabID","filter","tab","id","length","tabContent","find","content","className","map","cn","onClick","href","title","App","useState","setSelectedTabId","selectedTabTitle","ReactDOM","render","document","getElementById"],"mappings":"0MAOaA,EAAO,SAAC,GAA4C,IAFjCC,EAETC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,GAHwBJ,EAGeE,EAAND,EAHGI,QAAO,SAAAC,GAAG,OAAIA,EAAIC,KAAOP,KAAIQ,OAAS,EAI5EN,EACAD,EAAK,GAAGM,IAENE,EAAaR,EAAKS,MAAK,SAAAJ,GAAG,OAAIA,EAAIC,KAAOH,KAAeO,QAE9D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGX,EAAKY,KAAI,SAAAP,GAAG,OACX,oBAEEM,UAAWE,IAAG,CAAE,YAAaR,EAAIC,KAAOH,IACxC,UAAQ,MACRW,QAAS,WACHT,EAAIC,KAAOH,GACbD,EAAcG,IANpB,SAUE,mBAAGU,KAAI,WAAMV,EAAIC,IAAM,UAAQ,UAA/B,SACGD,EAAIW,SAVFX,EAAIC,WAiBjB,qBAAKK,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QChCIR,G,kBAAO,CAClB,CAAEM,GAAI,QAASU,MAAO,QAASN,QAAS,eACxC,CAAEJ,GAAI,QAASU,MAAO,QAASN,QAAS,eACxC,CAAEJ,GAAI,QAASU,MAAO,QAASN,QAAS,iBAG7BO,EAAM,WACjB,MAA0CC,mBAASlB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBkB,EAAtB,KACMC,EAAmBpB,EAAKS,MAAK,SAAAJ,GAAG,OAAIA,EAAIC,KAAOL,KAAee,MAEpE,OACE,sBAAKL,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0CS,KAE1C,cAAC,EAAD,CACEpB,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAAAG,GAAG,OAAIc,EAAiBd,EAAIC,WCpBnDe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5f3c1663.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport cn from 'classnames';\n\n// eslint-disable-next-line max-len\nconst checkIfTabExists = (list, Id) => list.filter(tab => tab.id === Id).length > 0;\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const selectedTabID = checkIfTabExists(tabs, selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  const tabContent = tabs.find(tab => tab.id === selectedTabID).content;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={cn({ 'is-active': tab.id === selectedTabID })}\n              data-cy=\"Tab\"\n              onClick={() => {\n                if (tab.id !== selectedTabID) {\n                  onTabSelected(tab);\n                }\n              }}\n            >\n              <a href={`#${tab.id}`} data-cy=\"TabLink\">\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTabTitle = tabs.find(tab => tab.id === selectedTabId).title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${selectedTabTitle}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={tab => setSelectedTabId(tab.id)}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}